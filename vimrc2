"Compatibility
set nocompatible

" Show numbers
set number
set relativenumber

" Colors and themes
syntax on
colorscheme slate

" Indentation 
set autoindent
set tabstop=2
set shiftwidth=2

" Wildmenu
set wildmenu
"set wildmode=list,longest

" Buffers : permet d'utiliser argdo et bufdo sur plusieurs buffers avec une
" seule commande
set hidden

" Search
set hlsearch " surlignage des recherches
set incsearch " recherche dès la première frappe
set smartcase " ignore la casse si la recherche est faite en minuscule

"
set showmatch " surligne les parenthèse correspondantes

" History
set history=1000
set undolevels=1000

" Supress sounds
set visualbell
set noerrorbells

" Title
" set list " terminer les lignes par un $

" Mouse
"set mouse=a " activation de la souris

" Desactivate arrow keys
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <right> <nop>
nnoremap <left> <nop>

vnoremap <up> <nop>
vnoremap <down> <nop>
vnoremap <right> <nop>
vnoremap <left> <nop>

inoremap <up> <nop>
inoremap <down> <nop>
inoremap <right> <nop>
inoremap <left> <nop>

" j and k occur on display lines instead of real lines
" nnoremap j gj
" nnoremap k gk

" gj and gk occur on real lines instead of display lines
" nnoremap gj j
" nnoremap gk k

" Remplace C-W + hjkl by C-hjkl
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l
noremap <C-h> <C-w>h

" Desactivate arrow keys in command line mode
cnoremap <up> <nop>
cnoremap <down> <nop>

" Make <C-p> and <C-n> filter the command history
cnoremap <C-p> <up>
cnoremap <C-n> <down>

" Resize window with arrows
nnoremap <Up>    :resize -2<CR>
nnoremap <Down>  :resize +2<CR>
nnoremap <Left>  :vertical resize -2<CR>
nnoremap <Right> :vertical resize +2<CR>

nnoremap è `
nnoremap ç ^



" Netrw configuration
let g:netrw_banner=0
let g:netrw_liststyle=3
let g:netrw_browse_split=4
let g:netrw_winsize = 20
let g:netrw_altv=1

" Open netrw at startup
" augroup netrw
"  	autocmd!
"  	autocmd VimEnter * :Lexplore
" 	autocmd
" augroup END

let g:NetrwIsOpen=0

function! ToggleNetrw()
	if g:NetrwIsOpen
		let i = bufnr("$")
	while (i >= 1)
		if (getbufvar(i, "&filetype") == "netrw")
			silent exe "bwipeout " . i 
		endif
		let i-=1
		endwhile
		let g:NetrwIsOpen=0
	else
		let g:NetrwIsOpen=1
		silent Vexplore!
	endif
endfunction

" Add your own mapping. For example:
nnoremap <silent> ° :call ToggleNetrw()<CR>

" Fuzzy finder
set path+=**




" -------------------------
" status line configuration
" -------------------------

"	Possible mode 
let g:currentmode={
    \ 'n'  : 'Normal',
    \ 'no' : 'Normal·Operator Pending',
    \ 'v'  : 'Visual',
    \ 'V'  : 'V·Line',
    \ '^V' : 'V·Block',
    \ 's'  : 'Select',
    \ 'S'  : 'S·Line',
    \ '^S' : 'S·Block',
    \ 'i'  : 'Insert',
    \ 'R'  : 'Replace',
    \ 'Rv' : 'V·Replace',
    \ 'c'  : 'Command',
    \ 'cv' : 'Vim Ex',
    \ 'ce' : 'Ex',
    \ 'r'  : 'Prompt',
    \ 'rm' : 'More',
    \ 'r?' : 'Confirm',
    \ '!'  : 'Shell',
    \ 't'  : 'Terminal'
    \}

" Mode will be shown in statusline
set noshowmode

" Remove vertical split highlighting
hi VertSplit	ctermfg=8	ctermbg=0	cterm=NONE	

set laststatus=2 " always enable status line
set ruler " position in %
set statusline=%<\%0*\ %n\ %F\ %h%m%r%=%-14.(%l/%L,%c%V%)\ %P  " statusline definition below

" %< - where to truncate the line if too long
" %F - buffer name (path to a file, or something)
" %h - help flag
" %m - modified flag
" %r - readonly flag
" %= - separater between the left (buffer name) and the right (ruler) parts
" %-14.(...%) - minimum field width == 14
" %l - line
" %c - column
" %V - virtual column
" %P - percentage

" Statusline color (default and inactive window)
hi StatusLine		ctermfg=0	ctermbg=2	cterm=NONE 
hi StatusLineNC	ctermfg=2	ctermbg=8	cterm=NONE

" Change statusline color when entering and leaving insert mode 
if version >= 700
  au InsertEnter * hi StatusLine ctermbg=0 ctermbg=46	cterm=NONE
  au InsertLeave * hi StatusLine ctermfg=0 ctermbg=2	cterm=NONE
endif











" -------------------------

" Edit vimrc shortcuts
nnoremap <leader>ev :vert new $HOME\.vimrc<cr>
nnoremap <leader>sv :source $HOME\.vimrc<cr>

" Shortcut to  set cursor line and column 
hi CursorLine   cterm=NONE ctermbg=darkred ctermfg=none guibg=darkred guifg=white
hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
nnoremap <Leader>c :set cursorline! cursorcolumn!<CR>

" Tab color configuration
hi TabLineFill ctermfg=2	ctermbg=8
hi TabLine		 ctermfg=0		ctermbg=8
hi TabLineSel ctermfg=0 ctermbg=2
hi Title ctermfg=0

set showtabline=2


" Terminal statusline color configuration
hi StatusLineTerm ctermbg=13 ctermfg=0
hi StatusLineTermNC ctermbg=8 ctermfg=13
